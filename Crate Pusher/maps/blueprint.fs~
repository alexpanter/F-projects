module blueprint

// This is the blueprint file.
// It contains information about how a game map is represented
// in the game in terms of data types.



(*   THIS SHOULD BE COPIED AND MODIFIED FOR EACH INSTANCE:
    let map: int [] [] =
        [| [| 0; 0; 0; 0; 0; 0; 0; 0; 0; |]
           [| 0; 0; 0; 0; 0; 0; 0; 0; 0; |]
           [| 0; 0; 0; 0; 0; 0; 0; 0; 0; |]
           [| 0; 0; 0; 0; 0; 0; 0; 0; 0; |]
           [| 0; 0; 0; 0; 0; 0; 0; 0; 0; |]
           [| 0; 0; 0; 0; 0; 0; 0; 0; 0; |]
           [| 0; 0; 0; 0; 0; 0; 0; 0; 0; |]
           [| 0; 0; 0; 0; 0; 0; 0; 0; 0; |]
           [| 0; 0; 0; 0; 0; 0; 0; 0; 0; |]
        |]
 *)



type GameMap(_map: int [,]) = class

    let width = _map.Length / _map.Rank
    let height = _map.Rank
    do
        if width <> height then
            failwithf "map must be of size n x n but was %i x %i"
                height width

    member this.Size = width
    member this.Map = _map

end
